<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
    xmlns:jaxrs="http://cxf.apache.org/jaxrs"
    xsi:schemaLocation="
                        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/data/jpa 
                        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

    <!--
        #########################################################
        指定连接池配置
        #########################################################
    -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
        <property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
        <property name="user" value="eliefly" />
        <property name="password" value="eliefly" />
    </bean>
    <!-- spring整合JPA -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--
            #########################################################
            指定JPA扫描的实体类所在的包
            #########################################################
        -->
        <property name="packagesToScan" value="com.eliefly.bos.domain" />
        <!-- 指定持久层提供者为Hibernate -->
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence" />
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- 自动建表 -->
                <property name="generateDdl" value="true" />
                <property name="database" value="ORACLE" />
                <property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!--
        #########################################################
        开启IOC注解.
        指定Spring进行扫描的包，如果该包中的类使用了@Component @Controller@Service等注解，会把这些类注册为bean
        ！！！！不要扫描DAO ！！！！
        DAO包下的类要使用Spring Data JPA框架进行扫描
        #########################################################
    -->
    <context:component-scan base-package="com.eliefly.bos.service, com.eliefly.bos.web" />

    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!--
        #########################################################
        指定Spring Data JPA要进行扫描的包,该包中的类框架会自动为其创建代理
        #########################################################
    -->
    <jpa:repositories base-package="com.eliefly.bos.dao" />

    <!--
        发布订单服务
        address : 请求地址
    -->
    <jaxrs:server address="/orderService">
        <jaxrs:serviceBeans>
            <ref bean="orderServiceImpl" />
        </jaxrs:serviceBeans>

        <!--
            拦截请求信息,非必须
            设置后,可以在控制台观察到请求信息
        -->
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
        </jaxrs:inInterceptors>
        <!--
            拦截响应信息,非必须
            设置后,可以在控制台观察到响应信息
        -->
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
        </jaxrs:outInterceptors>
    </jaxrs:server>

    <!-- 初始化shiro框架提供的过滤器 -->
    <bean id="shiroFilterFactoryBean" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--注入安全管理器 -->
        <property name="securityManager" ref="securityManager"></property>
        <!-- 登录页面的地址,认证的地址 -->
        <property name="loginUrl" value="/login.jsp"></property>
        <!-- 认证成功以后,跳转的页面 -->
        <property name="successUrl" value="/index.html"></property>
        <!-- 如果用户访问了一个没有权限的页面,跳转的页面 -->
        <property name="unauthorizedUrl" value="/unauthorized.html"></property>
        <!-- 指定拦截的规则 -->
        <property name="filterChainDefinitions">
            <!-- authc : 对应的资源需要认证成功,才能访问.如果认证失败,就返回登录页面 -->
            <!-- anon : 对应的资源可以匿名访问 -->
            <!-- 过滤器执行的规则是从上往下,一旦有一个执行了,下面的就不再会被执行 -->
            <!-- 规则不可以折行 -->
            <value>
                /css/* = anon
                /images/* = anon
                /js/** = anon
                /validatecode.jsp* = anon
                /userAction_login.action = anon
                /** = authc
                /areaAction_pageQuery.action = perms["areaAction_pageQuery"]
            </value>
        </property>

    </bean>
    <!-- 注册安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"></property>
    </bean>


</beans>